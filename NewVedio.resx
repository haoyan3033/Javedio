<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="OpenFileDialog1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAABILAAASCwAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAJAAAAHgAAAC8AAAA6AAAAPgAAAD4AAAA+AAAAPgAAAD4AAAA/AAAAPwAA
        AD8AAAA/AAAAPwAAAD8AAAA/AAAAPwAAAD8AAAA/AAAAPwAAAD8AAAA+AAAAPgAAAD4AAAA+AAAAPgAA
        ADoAAAAvAAAAHgAAAAkAAAAAAAAAAAAAAB4AAABgAAAAlAAAALQAAADCAAAAwQAAAMEAAADCAAAAwgAA
        AMMAAADDAAAAwwAAAMMAAADDAAAAwwAAAMMAAADDAAAAwwAAAMMAAADDAAAAwwAAAMIAAADCAAAAwQAA
        AMEAAADCAAAAtAAAAJQAAABgAAAAHgAAAAAAAAAAAAAALwAAAJQAAADSAAAA3gAAAOQAAADqAAAA6wAA
        AOYAAADgAAAA2gAAANcAAADXAAAA2AAAANgAAADYAAAA2AAAANgAAADYAAAA1wAAANcAAADaAAAA4AAA
        AOYAAADrAAAA6gAAAOQAAADeAAAA0gAAAJQAAAAvAAAAAAAAAAAAAAA6AAAAtAAAAN4AAACtAAAAmwAA
        AK8AAACyAAAAoAAAAI0AAAB7AAAAcgAAAHIAAABzAAAAcwAAAHMAAABzAAAAcwAAAHMAAAByAAAAcgAA
        AHsAAACNAAAAoAAAALIAAACvAAAAmwAAAK0AAADeAAAAtAAAADoAAAAAAAAAAAAAAD8AAADDAAAA5QAA
        AJwAAACBAAAAmgAAAJYAAABzAAAAUgAAADcAAAAqAAAAKwAAACsAAAArAAAAKwAAACsAAAArAAAAKwAA
        ACsAAAAqAAAANwAAAFIAAABzAAAAlgAAAJoAAACBAAAAnAAAAOUAAADDAAAAPwAAAAAAAAAAAAAAPgAA
        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
        AJ4AAACvAAAAmgAAALAAAADrAAAAwgAAAD4AAAAAAAAAAAAAAD8AAADDAAAA5gAAAJwAAACBAAAAmgAA
        AJcAAAB0AAAAUwAAADgAAAArAAAALAAAACwAAAAsAAAALAAAACwAAAAsAAAALAAAACwAAAArAAAAOAAA
        AFMAAAB0AAAAlwAAAJoAAACBAAAAnAAAAOUAAADDAAAAPwAAAAAAAAAAAAAAOQAAALEAAADbAAAArAAA
        AJwAAACwAAAAswAAAKEAAACOAAAAfAAAAHIAAABzAAAAcwAAAHMAAABzAAAAcwAAAHMAAABzAAAAcwAA
        AHIAAAB8AAAAjgAAAKEAAACzAAAAsAAAAJwAAACtAAAA3gAAALQAAAA5AAAAAAAAAAAAAAArAAAAiwAA
        AMgAAADbAAAA5AAAAOoAAADsAAAA5gAAAOAAAADaAAAA2AAAANgAAADYAAAA2AAAANgAAADYAAAA2AAA
        ANgAAADYAAAA2AAAANoAAADgAAAA5gAAAOwAAADqAAAA5AAAAN4AAADRAAAAlAAAAC4AAAAAAAAAAAAA
        ABsAAABWAAAAiwAAALEAAADCAAAAwQAAAMEAAADCAAAAwgAAAMMAAADDAAAAwwAAAMMAAADDAAAAwwAA
        AMMAAADDAAAAwwAAAMMAAADDAAAAwwAAAMIAAADCAAAAwQAAAMEAAADCAAAAtAAAAJQAAABfAAAAHQAA
        AAAAAAAAAAAACAAAABsAAAArAAAAOQAAAD4AAAA+AAAAPgAAAD4AAAA+AAAAPwAAAD8AAAA/AAAAPwAA
        AD8AAAA/AAAAPwAAAD8AAAA/AAAAPwAAAD8AAAA/AAAAPgAAAD4AAAA+AAAAPgAAAD4AAAA5AAAALgAA
        AB0AAAAJAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA/////4AAAAGAAAABgAAAAYAAAAGAAAABgAAAAYAf+AGAH/gBgB/4AYAf
        +AGAABgBgAAYAYAAAAGAAAABgAAAAYAAAAGAAAABgAAAAYAAGAGAABgBgB/4AYAf+AGAH/gBgB/4AYAA
        AAGAAAABgAAAAYAAAAGAAAABgAAAAf////8=
</value>
  </data>
</root>